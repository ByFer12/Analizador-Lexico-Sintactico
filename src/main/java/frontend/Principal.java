/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import Clases.Id;
import java.awt.Color;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
               light.setVisible(false);
               mostrarLight.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        subtitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        selecconar = new javax.swing.JButton();
        analizar = new javax.swing.JButton();
        importar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        light = new javax.swing.JButton();
        dark = new javax.swing.JButton();
        mostrarDark = new javax.swing.JLabel();
        mostrarLight = new javax.swing.JLabel();
        tokens = new javax.swing.JButton();
        errores = new javax.swing.JButton();
        selec = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador Lexico");
        setBackground(new java.awt.Color(158, 220, 156));

        jPanel1.setBackground(new java.awt.Color(197, 215, 195));
        jPanel1.setForeground(new java.awt.Color(182, 209, 214));

        subtitle.setFont(new java.awt.Font("Noto Sans CJK JP", 1, 24)); // NOI18N
        subtitle.setText("                 Analizador lexico");

        area.setBackground(new java.awt.Color(75, 115, 111));
        area.setColumns(20);
        area.setLineWrap(true);
        area.setRows(5);
        area.setWrapStyleWord(true);
        jScrollPane1.setViewportView(area);

        selecconar.setBackground(new java.awt.Color(58, 139, 114));
        selecconar.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        selecconar.setText("Seleccionar...");
        selecconar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecconarActionPerformed(evt);
            }
        });

        analizar.setBackground(new java.awt.Color(72, 113, 101));
        analizar.setFont(new java.awt.Font("Noto Sans", 1, 15)); // NOI18N
        analizar.setText("Analizar");
        analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarActionPerformed(evt);
            }
        });

        importar.setBackground(new java.awt.Color(82, 141, 126));
        importar.setFont(new java.awt.Font("Noto Sans", 1, 16)); // NOI18N
        importar.setText("Import");
        importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarActionPerformed(evt);
            }
        });

        salir.setBackground(new java.awt.Color(83, 140, 128));
        salir.setFont(new java.awt.Font("Noto Sans", 3, 15)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        light.setBackground(new java.awt.Color(39, 54, 62));
        light.setFont(new java.awt.Font("Noto Sans", 1, 10)); // NOI18N
        light.setForeground(new java.awt.Color(144, 212, 221));
        light.setActionCommand("Light Mode");
        light.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightActionPerformed(evt);
            }
        });

        dark.setBackground(new java.awt.Color(39, 54, 62));
        dark.setFont(new java.awt.Font("Noto Sans", 1, 10)); // NOI18N
        dark.setForeground(new java.awt.Color(144, 212, 221));
        dark.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darkActionPerformed(evt);
            }
        });

        mostrarDark.setText("Dark Mode");

        mostrarLight.setText("Light Mode");

        tokens.setBackground(new java.awt.Color(87, 138, 120));
        tokens.setText("Tokens");
        tokens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tokensActionPerformed(evt);
            }
        });

        errores.setBackground(new java.awt.Color(84, 120, 108));
        errores.setText("Errores");
        errores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erroresActionPerformed(evt);
            }
        });

        selec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecActionPerformed(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(84, 131, 114));
        buscar.setText("Buscar Palabra");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dark)
                    .addComponent(light))
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(errores, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(tokens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(limpiar)
                                .addGap(17, 17, 17)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(28, 28, 28)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(analizar)
                                                .addComponent(importar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(selecconar))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(26, 26, 26)
                                    .addComponent(selec, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buscar)))
                            .addComponent(salir, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(mostrarLight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mostrarDark)
                        .addGap(68, 68, 68))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostrarDark)
                    .addComponent(mostrarLight))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dark, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(light, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(49, 49, 49)
                        .addComponent(tokens)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(85, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(selecconar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(analizar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(importar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(salir)
                                .addGap(31, 31, 31))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(errores)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(limpiar)
                                .addGap(53, 53, 53))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscar))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selecconarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecconarActionPerformed
        //Abrimos el gestor de archivos para buscar nuestro archivo
        JFileChooser archivo = new JFileChooser();
        //Solo pueden seleccionar archivos .txt
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".TXT", "txt");
        //Filtramos el archivo
        archivo.setFileFilter(filtro);
        //Guardamos la opcion seleccionada
        int seleccion = archivo.showOpenDialog(this);
        //Si el usuario le da en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Seleccionamos el archivo a analizar
            File aLeer = archivo.getSelectedFile();
            //Empezamos a leer el archivo
            try (FileReader leer = new FileReader(aLeer)) {
                String cadena = "";
                int val = leer.read();
                while (val != -1) {
                    cadena += (char) val;
                    val = leer.read();

                }
                this.area.setText(cadena);

            } catch (IOException e) {
                JOptionPane.showMessageDialog(rootPane, "Archivo no encontrado");

            }

        }
    }//GEN-LAST:event_selecconarActionPerformed

    private void importarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarActionPerformed
        //Abrimos el gestor de archivos para buscar nuestro archivo
        JFileChooser archivo = new JFileChooser();
        //Solo pueden seleccionar archivos .txt
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".TXT", "txt");
        //Filtramos el archivo
        archivo.setFileFilter(filtro);
        //Guardamos la opcion seleccionada
        int seleccion = archivo.showSaveDialog(this);
        //Si el usuario le da en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Seleccionamos el archivo a analizar
            File aLeer = archivo.getSelectedFile();
            //Empezamos a leer el archivo
            try (FileWriter escribir = new FileWriter(aLeer)) {

                escribir.write(this.area.getText());

            } catch (IOException e) {
                JOptionPane.showMessageDialog(rootPane, "Archivo no encontrado");

            }

        }
    }//GEN-LAST:event_importarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void lightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightActionPerformed
        light.setVisible(false);
        dark.setVisible(true);
        jPanel1.setBackground(Color.decode("#c5d7c3"));
       area.setBackground(Color.decode("#4b736f"));
       subtitle.setForeground(Color.decode("#4b736f"));
       selec.setBackground(Color.decode("#4b736f"));
       selecconar.setBackground(Color.decode("#3a8b72"));
       selecconar.setForeground(Color.decode("#dedede"));
       analizar.setBackground(Color.decode("#3a8b72"));
       analizar.setForeground(Color.decode("#dedede"));
       importar.setBackground(Color.decode("#3a8b72"));
       importar.setForeground(Color.decode("#dedede"));
       salir.setBackground(Color.decode("#3a8b72"));
       salir.setForeground(Color.decode("#dedede"));
       tokens.setBackground(Color.decode("#3a8b72"));
       tokens.setForeground(Color.decode("#dedede"));
       errores.setBackground(Color.decode("#3a8b72"));
       errores.setForeground(Color.decode("#dedede"));
        buscar.setBackground(Color.decode("#3a8b72"));
       buscar.setForeground(Color.decode("#dedede"));
       dark.setBackground(Color.decode("#27363e"));
       dark.setForeground(Color.decode("#B6E9F0"));
       mostrarDark.setVisible(true);
       mostrarLight.setVisible(false);
       mostrarDark.setForeground(Color.decode("#27363e"));

    }//GEN-LAST:event_lightActionPerformed

    private void darkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darkActionPerformed
        // TODO add your handling code here:
        light.setVisible(true);
        dark.setVisible(false);
       jPanel1.setBackground(Color.decode("#1E464C"));
       area.setBackground(Color.decode("#1F555D"));
       subtitle.setForeground(Color.decode("#63777A"));
       selec.setBackground(Color.decode("#63777A"));
       selecconar.setBackground(Color.decode("#022F36"));
       selecconar.setForeground(Color.decode("#63777A"));
       analizar.setBackground(Color.decode("#022F36"));
       analizar.setForeground(Color.decode("#63777A"));
       importar.setBackground(Color.decode("#022F36"));
       importar.setForeground(Color.decode("#63777A"));
       salir.setBackground(Color.decode("#022F36"));
       salir.setForeground(Color.decode("#63777A"));
       tokens.setBackground(Color.decode("#022F36"));
       tokens.setForeground(Color.decode("#63777A"));
       errores.setBackground(Color.decode("#022F36"));
       errores.setForeground(Color.decode("#63777A"));
        buscar.setBackground(Color.decode("#3a8b72"));
       buscar.setForeground(Color.decode("#dedede"));
       light.setBackground(Color.decode("#B6E9F0"));
       light.setForeground(Color.decode("#27363e"));
       mostrarLight.setForeground(Color.decode("#B6E9F0"));
       mostrarLight.setVisible(true);
     
       mostrarDark.setVisible(false);
    }//GEN-LAST:event_darkActionPerformed

    private void tokensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tokensActionPerformed
        Token t1 = new Token();
        Id i = new Id();
        t1.setVisible(true);
        t1.setLocationRelativeTo(null);
        String dato=i.nm;
         if (i.aceptar) {
            t1.area.setText(area.getText());
        } else {
            t1.area.setText("No aceptado");
        }
        
         
        
            
        
        
        
    }//GEN-LAST:event_tokensActionPerformed

    private void erroresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erroresActionPerformed
        Errores e1=new Errores();
        e1.setVisible(true);
        e1.setLocationRelativeTo(null);
    }//GEN-LAST:event_erroresActionPerformed

    private void selecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecActionPerformed

    }//GEN-LAST:event_selecActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        String texto=selec.getText();
        String are=area.getText();
        Pattern busc=Pattern.compile(are);
        Matcher match = busc.matcher(texto);
        boolean res = match.matches();
        if(res){
            JOptionPane.showMessageDialog(null, texto);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void analizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarActionPerformed
       String dato= area.getText();
       Id i = new Id();
       i.inicio(dato);
    }//GEN-LAST:event_analizarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        area.setText("");
    }//GEN-LAST:event_limpiarActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizar;
    public javax.swing.JTextArea area;
    private javax.swing.JButton buscar;
    private javax.swing.JButton dark;
    private javax.swing.JButton errores;
    private javax.swing.JButton importar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton light;
    private javax.swing.JButton limpiar;
    private javax.swing.JLabel mostrarDark;
    private javax.swing.JLabel mostrarLight;
    private javax.swing.JButton salir;
    private javax.swing.JTextField selec;
    private javax.swing.JButton selecconar;
    private javax.swing.JLabel subtitle;
    private javax.swing.JButton tokens;
    // End of variables declaration//GEN-END:variables
}
